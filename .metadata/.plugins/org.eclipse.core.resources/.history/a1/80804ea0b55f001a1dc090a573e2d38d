package queue;

import java.util.LinkedList;
import java.util.Queue;

public class UniqueCharsInStream {
	public String solve(String str) {
        Queue<Character> q = new LinkedList()<Character>(); 
        StringBuilder res = new StringBuilder("");
        int[] cnt = new int[26];
        for(char x : str.toCharArray()){
            cnt[x - 'a']++;
            
            // no need to add dup char in queue if you have to remove it
            if(cnt[x - 'a'] == 1)   q.add(x);
            
            // we check if the q contains an already seen ele with the help of a bit map
            // get rid of all such ele and find a fresh ele to build your solution with
            while(!q.isEmpty() && cnt[q.peek() - 'a'] > 1){
                    q.remove();
            }
            if(!q.isEmpty())  // we have a uniq ele until this point in the stresm
                res.append(q.peek());
            else
                res.append("#");
            
        }
        
        return res.toString();
    }
}
	